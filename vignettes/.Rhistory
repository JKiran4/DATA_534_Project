library(httr)
knitr::opts_chunk$set(collapse = TRUE)
devtools::install_github('JKiran4/TripadvisoR')
library(TripadvisoR)
api_key <- "AA79C765B0DE44CD91518F3456F2A6A8"
# get city information from the following string: "Vancouver in Canada"
get_city("Vancouver in Canada")
# get top 10 results for restaurants in "Kelowna" with the string "Best Sushi in Town"
top_ten("Best Sushi in Town", type = "restaurants", city = "Kelowna")
# get location info for the ID 1996323
get_location_info(1996323)
library(tidyr)
library(ggplot2)
# get top 10 restaurants
top_10_df <- top_ten("Best Sushi in Town", type = "restaurants", city = "Kelowna")
# only need ids
ids <- top_10_df$id
# retrieve location information, filtering for name and rating columns
location_data <- lapply(ids, function(id) {
info <- get_location_info(id)
info %>%
select(Name, `Count.1.Star.Ratings`, `Count.2.Star.Ratings`,
`Count.3.Star.Ratings`, `Count.4.Star.Ratings`, `Count.5.Star.Ratings`)
})
library(tidyr)
library(ggplot2)
# get top 10 restaurants
top_10_df <- top_ten("Best Sushi in Town", type = "restaurants", city = "Kelowna")
# only need ids
ids <- top_10_df$id
# retrieve location information, filtering for name and rating columns
location_data <- lapply(ids, function(id) {
info <- get_location_info(id)
info %>%
select(Name, `Count.1.Star.Ratings`, `Count.2.Star.Ratings`,
`Count.3.Star.Ratings`, `Count.4.Star.Ratings`, `Count.5.Star.Ratings`)
})
library(dplyr)
library(tidyr)
library(ggplot2)
# get top 10 restaurants
top_10_df <- top_ten("Best Sushi in Town", type = "restaurants", city = "Kelowna")
# only need ids
ids <- top_10_df$id
# retrieve location information, filtering for name and rating columns
location_data <- lapply(ids, function(id) {
info <- get_location_info(id)
info %>%
select(Name, `Count.1.Star.Ratings`, `Count.2.Star.Ratings`,
`Count.3.Star.Ratings`, `Count.4.Star.Ratings`, `Count.5.Star.Ratings`)
})
# combine into a single data frame and convert to long format
ratings_df <- bind_rows(location_data)
ratings_long <- ratings_df %>%
pivot_longer(cols = -Name, names_to = "Star_Rating", values_to = "Count")
# making cleaner labels
ratings_long$Star_Rating <- factor(ratings_long$Star_Rating,
levels = colnames(ratings_df)[-1],
labels = c("1 Star", "2 Stars", "3 Stars", "4 Stars", "5 Stars"))
# make sure rating counts are numeric, not categorical
ratings_long$Count <- as.numeric(ratings_long$Count)
# generate plots for each restaurant
for (restaurant in unique(ratings_long$Name)) {
plot <- ggplot(ratings_long %>% filter(Name == restaurant), aes(x = Star_Rating, y = Count, fill = Star_Rating)) +
geom_bar(stat = "identity") +
labs(title = paste(restaurant, "Reviews"), x = NULL, y = "Count") +
theme_minimal() +
theme(legend.position = "none") +
scale_fill_brewer(palette = "Set2")
print(plot)
}
